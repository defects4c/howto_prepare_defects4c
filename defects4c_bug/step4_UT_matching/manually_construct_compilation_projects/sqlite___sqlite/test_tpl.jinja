test_log=$2
TIMEOUT=10 

cat /dev/null > $test_log


timeout 100  make -j {{ cpu_count }}  testfixture 



{% for one_file in test_files %}

    if which "gdb" >/dev/null 2>&1; then
		timeout $TIMEOUT  gdb --batch --ex run --args ./testfixture "{{one_file}}"  >>  $test_log  2>&1  
	else 
		timeout $TIMEOUT ./testfixture {{one_file}} >>  $test_log   2>&1 
	fi 

{% endfor %}



if [ -f "$test_log" ]; then

        fn=$(realpath $test_log )


        get_status() {
                string=$(cat $fn )

                if grep -q "^0 errors out of" <<< "$string"; then
                    echo "success\n"
                else
                    echo "FAILED\n"
                fi
        }

        get_err_msg_v1() {
                string=$(grep -v "Ok" $test_log )
                echo $string 
        }
        get_err_msg() {
                grep -v "Ok" $test_log > $1 
        }

        fix_log="${test_log/\.log/}"

        status_log=$( get_status)
        echo $status_log > "${fix_log}.status"

        #msg_log=$( get_err_msg)
        #echo $msg_log > "${fix_log}.msg"
		get_err_msg "${fix_log}.msg" 
fi 